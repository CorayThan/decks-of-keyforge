buildscript {
    ext {
        kotlinVersion = '1.3.71'
        springBootVersion = '2.2.6.RELEASE'
        queryDslVersion = "4.3.0"
        shedlockVersion = "4.6.0"
        jjwtVersion = "0.11.1"
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
        // For fixing windows command too long
        classpath "gradle.plugin.com.github.viswaramamoorthy:gradle-util-plugins:0.1.0-RELEASE"
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
// For fixing windows command too long
apply plugin: "com.github.ManifestClasspath"

group = 'coraythan'
version = '317'
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }

    bootJar {
        from('.ebextensions') {
            into('.ebextensions')
        }
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
}

springBoot {
    mainClassName = "coraythan.keyswap.KeyswapApplicationKt"
}

dependencies {

    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation("org.springframework.boot:spring-boot-starter-mail")
    implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
    implementation('com.fasterxml.jackson.dataformat:jackson-dataformat-yaml')
    implementation('org.flywaydb:flyway-core')
    implementation("net.javacrumbs.shedlock:shedlock-spring:$shedlockVersion")
    implementation("net.javacrumbs.shedlock:shedlock-provider-jdbc-template:$shedlockVersion")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    implementation("org.apache.commons:commons-lang3:3.9")
    implementation("org.logback-extensions:logback-ext-loggly:0.1.5")
    implementation('org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.5')
    implementation("com.patreon:patreon:0.4.2")
    implementation("com.amazonaws:aws-java-sdk-s3:1.11.656")

    implementation("io.jsonwebtoken:jjwt-api:$jjwtVersion")
    runtime("io.jsonwebtoken:jjwt-impl:$jjwtVersion")
    runtime("io.jsonwebtoken:jjwt-jackson:$jjwtVersion")

    implementation("com.querydsl:querydsl-core:$queryDslVersion")
    implementation("com.querydsl:querydsl-jpa:$queryDslVersion")
    kapt("com.querydsl:querydsl-apt:$queryDslVersion:jpa")

    runtimeOnly('org.postgresql:postgresql')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.springframework.security:spring-security-test')
}
